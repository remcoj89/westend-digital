---
import Layout from "../../layouts/Layout.astro";
import createDOMPurify from 'dompurify';
import { JSDOM } from 'jsdom';
import fetchBlogArticles from "../../lib/fetchBlogArticles"
import Header from "../../components/Header.astro";
import CtaSection from "../../sections/CtaSection.astro";
import FooterSection from "../../sections/FooterSection.astro";

const window = new JSDOM('').window;
const DOMPurify = createDOMPurify(window);

export async function getStaticPaths() {
  try {
    const blogs = await fetchBlogArticles();
    // console.log("Fetched blogs:", blogs); // Inspecteer de data

    if (!blogs || blogs.length === 0) {
      // console.warn("No blogs found!");
      return []; // Lege array als er geen blogs zijn
    }

    return blogs.map((blog) => {
     // Sanitize de HTML content (stel: blog.node.content bevat gevaarlijke HTML)
      const rawHtml = blog.node.content || '';
      const safeHtml = DOMPurify.sanitize(rawHtml);


      // console.log("Processing blog:", blog); // Inspecteer individuele blog

      return {
        params: {
          slug: blog.node.slug,
        },
        props: {
          blogData: {
            ...blog,
            node: {
              ...blog.node,
              content: safeHtml, // vervang met veilige HTML
            },
          },
        },
      };
    });
  } catch (error) {
    // console.error("Error in getStaticPaths:", error);
    return []; // Lege array bij een error
  }
}

const { slug } = Astro.params;

const blogs = await fetchBlogArticles()
const blogData = blogs.find((blog: { node: { slug: any; }; }) => blog.node.slug === slug)

if (!blogData) {
  throw new Error('Blog not found');
}

const metaTitle = blogData.node.seo.title
const metaDescription = blogData.node.seo.metaDesc
const opengraphTitle = blogData.node.seo.opengraphTitle
const opengraphDescription = blogData.node.seo.opengraphDescription
const opengraphImageUrl = blogData.node.seo.opengraphImage.mediaItemUrl
const opengraphImageAlt = blogData.node.seo.opengraphImage.altText
---



<Layout
  title={`${metaTitle}`}
  description={`${metaDescription}`}
  ogTitle={`${opengraphTitle}`}
  ogDescription={`${opengraphDescription}`}
  ogImageUrl={`${opengraphImageUrl}`}
  ogImageAlt={`${opengraphImageAlt}`}

>
  <Header></Header>

  <section class="wrapper flex">
    <article class="blog-content">
      <a href="/blog">Terug naar de blog pagina</a>
      <h1>{blogData.node.title}</h1>
      <div set:html={blogData.node.content}></div>
    </article>
    <img
    src={blogData.node.featuredImage.node.mediaItemUrl}
    width={500}
    height={500}
    alt={blogData.node.featuredImage.node.altText}
    />
  </section>
<CtaSection />
<FooterSection />
</Layout>

<style>

  .blog-content {

    h1 {
      margin-top: var(--size-1);
      font-size: var(--fs-900);
    }

    div {
      display: grid;
      gap: var(--size-2);
      margin-block-start: var(--size-4) ;

      .wp-blog-block-heading {
        font-size: var(--fs-700);
      }

      .wp-block-list {
        margin-inline-start: var(--size-3);
      }
    }
  }

  img {
    height: 50vh;
  }

</style>
