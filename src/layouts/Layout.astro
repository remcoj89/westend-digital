---
import Navbar from '../components/Navbar.astro';
import '../styles/globals.css'

const {
 title,
 description,
 ogTitle,
 ogSiteName,
 ogDescription,
 ogImageUrl,
 ogImageAlt,
 ogUrl
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
    <meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <!-- <link rel="preload" as="image" href="/assets/images/shared/hero-background-image.webp"> -->
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
    <meta name="description" content={description}>
    <meta property="og:site_name" content={ogSiteName} />
    <meta property=“og:title” content={ogTitle} />
    <meta property="og:description" content={ogDescription} />
    <meta property="og:url" content={ogUrl} />
    <meta property="og:image" content={ogImageUrl}>
    <meta property="og:image:alt" content={ogImageAlt} />

	</head>
	<body>
    <Navbar />
		<slot />

	</body>
  </html>

<script is:inline>

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if(entry.isIntersecting) {
        entry.target.classList.add('show')
      }
    })
  })

  const sections = document.querySelectorAll("section")
  sections.forEach((section, i) => {
    if(i !== 0 ) {
      section.classList.add('hidden')
    }
  })

  const hiddenEllements = document.querySelectorAll(".hidden")
  hiddenEllements.forEach((el) => observer.observe(el))
</script>
